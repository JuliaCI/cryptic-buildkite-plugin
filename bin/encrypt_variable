#!/usr/bin/env bash

## Encrypt a variable for embedding directly within a `pipeline.yml` file.

# Load common tools
CRYPTIC_REPO="$( dirname "$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )" )"
source "${CRYPTIC_REPO}/lib/argparse.sh"
source "${CRYPTIC_REPO}/lib/common.sh"

# Get the repository root
find_repository_root

# Look for the repo key
find_repo_key

# Get the variable name and value
if [[ "$#" -ge 1 ]]; then
    SECRET_NAME="${1}"
else
    read -p 'Secret name: ' SECRET_NAME
fi

# Read in secret value
if [ "$#" -ge 2 ]; then
    SECRET_VALUE="${2}"
else
    read_secret -p "Secret value: " SECRET_VALUE
fi

# Do the actual encryption
ENCRYPTED_SECRET_VALUE="$(encrypt_aes "${REPO_KEY_PATH}" <<<"${SECRET_VALUE}" | base64enc)"

cat <<-EOD

    Congratulations, you have successfully encrypted a secret variable.

    You should add the following plugin to the steps you want to have access to the secret.
    Be sure to minimize the number of steps that have access to this secret information, as
    for true security you should lock down the CI configuration through treehashing your
    repository's pipeline.yaml files.  See the top-level README.md for more information on
    locking down CI configuration and next steps.

    plugins:
        - staticfloat/cryptic:
          variables:
            - ${SECRET_NAME}="${ENCRYPTED_SECRET_VALUE}"
EOD
