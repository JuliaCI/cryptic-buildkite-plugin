#!/bin/bash

## post-command hook: This hook implements treehash verification and pipeline launching

# Load common tools
CRYPTIC_REPO="$( cd "$( dirname "$( dirname "${BASH_SOURCE[0]}" )" )" &> /dev/null && pwd )"
source "${CRYPTIC_REPO}/lib/common.sh"

# If we're not authorized, quit out immediately
if [[ "${BUILDKITE_PLUGIN_CRYPTIC_PRIVILEGED:-false}" != "true" ]]; then
    echo "Exiting immediately, as we're not privileged"
    exit 0
fi

# If the command hook failed, quit out immediately
if [[ "$BUILDKITE_COMMAND_EXIT_STATUS" != "0" ]]; then
    echo "Exiting immediately, as the command block reported an error"
    exit 0
fi

# Collect all the locked pipeline configurations we have
readarray -d '' -t LOCKED_PIPELINES < <(collect_buildkite_array "BUILDKITE_PLUGIN_CRYPTIC_LOCKED_PIPELINES" "PIPELINE")

for PIPELINE_IDX in "${!LOCKED_PIPELINES[@]}"; do
    PIPELINE_PATH="${LOCKED_PIPELINES[${PIPELINE_IDX}]}"

    # Hash up the inputs
    readarray -d '' -t PIPELINE_INPUTS < <(collect_buildkite_array "BUILDKITE_PLUGIN_CRYPTIC_LOCKED_PIPELINES_${PIPELINE_IDX}_INPUTS")
    INPUT_TREEHASHES=( "$(calc_treehash <<<"${PIPELINE_PATH}")" )
    for PATTERN in "${PIPELINE_INPUTS[@]}"; do
        INPUT_TREEHASHES+=( "$(collect_glob_pattern "${PATTERN}" | calc_treehash)" )
    done

    # Hash all treehashes together to get full input hash
    FULL_TREEHASH=$(printf "%s" "${INPUT_TREEHASHES[@]}" | calc_shasum)

    # Compare this with the known-good treehash
    TREEHASH_VAR="BUILDKITE_PLUGIN_CRYPTIC_LOCKED_PIPELINES_${PIPELINE_IDX}_HASH"
    PIPELINE_TREEHASH="${!TREEHASH_VAR}"
    if [[ "${PIPELINE_TREEHASH}" != "${FULL_TREEHASH}" ]]; then
        die "Refusing to continue execution; pipeline '${PIPELINE_PATH}' fails treehash check!  Expected: **${PIPELINE_TREEHASH}** but calculated: **${FULL_TREEHASH}**!"
    fi

    # If we passed, launch the pipeline!
    buildkite-agent pipeline upload "${PIPELINE_PATH}"
done
