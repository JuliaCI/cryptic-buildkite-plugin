#!/usr/bin/env bash

## post-checkout hook: This hook performs the actual decryption of secrets

# Load common tools
CRYPTIC_REPO="$( cd "$( dirname "$( dirname "${BASH_SOURCE[0]}" )" )" &> /dev/null && pwd )"
source "${CRYPTIC_REPO}/lib/common.sh"

# If we're not authorized, quit out immediately
if [[ "${BUILDKITE_PLUGIN_CRYPTIC_PRIVILEGED:-false}" != "true" ]]; then
    echo "Exiting immediately, as we're not privileged"
    exit 0
fi

# Receive keys from agent environment hook
receive_keys

# Collect lists of files and variables we need to decrypt
readarray -d '' -t ENCRYPTED_VARIABLES < <(collect_buildkite_array "BUILDKITE_PLUGIN_CRYPTIC_VARIABLES")
readarray -d '' -t ENCRYPTED_FILES < <(collect_buildkite_array "BUILDKITE_PLUGIN_CRYPTIC_FILES")

# Decrypt each file
if [[ "${#ENCRYPTED_FILES[@]}" -gt 0 ]]; then
    echo "--- :unlock: Decrypt files"
    for FILE_PATH in "${ENCRYPTED_FILES[@]}"; do
        ENC_FILE_PATH="${FILE_PATH}.encrypted"
        if [[ ! -f "${ENC_FILE_PATH}" ]]; then
            die "Unable to find file '${ENC_FILE_PATH}' which we have been asked to decrypt!"
        fi
        if [[ -f "${FILE_PATH}" ]]; then
            die "Decrypted file '${FILE_PATH}' already exists in repository?!"
        fi

        echo " -> Decrypting ${FILE_PATH}"
        decrypt_aes_key_then_decrypt "${AGENT_PRIVATE_KEY_PATH}" "${REPO_KEY_PATH}" <"${ENC_FILE_PATH}" >"${FILE_PATH}"
    done
fi

# Decrypt each secret environment variable
if [[ "${#ENCRYPTED_VARIABLES[@]}" -gt 0 ]]; then
    echo "--- :unlock: Decrypt environment variables"
    for PAIR in "${ENCRYPTED_VARIABLES[@]}"; do
        VARNAME="$(echo ${PAIR%%=*} | tr -d '"')"
        SECRET_VALUE_BASE64="$(echo ${PAIR#*=} | tr -d '"')"

        echo " -> Decrypting ${VARNAME}"
        VALUE="$(base64dec <<<"${SECRET_VALUE_BASE64}" | decrypt_aes_key_then_decrypt "${AGENT_PRIVATE_KEY_PATH}" "${REPO_KEY_PATH}")"

        export "${VARNAME}"="${VALUE}"
    done
fi

# Sign the initial buildkite job ID, for future launch needs
export BUILDKITE_PLUGIN_CRYPTIC_BASE64_SIGNED_JOB_ID_SECRET=$(echo "${BUILDKITE_INITIAL_JOB_ID}" | sign_rsa "${AGENT_PRIVATE_KEY_PATH}" | base64enc)

# Clean up the values we're not using anymore
cleanup_keys
